node ('local') {
    try {

//------------------------------------------------------ECR-Login-----------------------------------------------------------------//

  stage 'ECR login'
    sh("eval \$(aws ecr get-login --no-include-email --region us-east-1)")

//------------------------------------------------------Code-Clone-----------------------------------------------------------------//

  stage 'Cloning Git'
  git credentialsId:'jenkins-server-local', url:'git@github.com:themanojkumawat/ansible-role-docker-jenkins.git', branch:'master'


//------------------------------------------------------Building-------------------------------------------------------------------//

 stage 'Building Image For Admin'
   sh 'sudo docker build -t 525068421702.dkr.ecr.us-east-1.amazonaws.com/test/:master .'



//-------------------------------------------------------Pushing To ECR ------------------------------------------------------------//

 stage 'Push Image To ECR'
    sh 'sudo docker push 525068421702.dkr.ecr.us-east-1.amazonaws.com/test:master'

//------------------------------------------------------Code Deploying ------------------------------------------------------------//

//    stage 'Deploy Code On API'
//      sh 'cd /opt/v2/deployment && sudo ansible-playbook dev-api.yml --tags code-deploy -e image_tag=$APP_ENV -e maintenance_enabled=$maintenance_enabled -e maintenance_disabled=$maintenance_disabled'
}

//------------------------------------------------------Notification--------------------------------------------------------------//
catch (e) {
    // If there was an exception thrown, the build failed
    currentBuild.result = "FAILED"
    throw e
  } finally {
    // Success or failure, always send notifications
    notifyBuild(currentBuild.result = "SUCCESS")
  }
}
def notifyBuild(String buildStatus = 'STARTED') {
  buildStatus =  buildStatus ?: 'SUCCESS'

  def colorName = 'RED'
  def colorCode = '#FF0000'

   if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00B200'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

      def attachments = [
      [
        text: 'Admin Deploy',
        color: colorCode,
        fields:[["title":"Result","value":currentBuild.result ,short:true],["title":"JOB_NAME","value":"${env.JOB_NAME}",short:true],["title":"BUILD_URL","value":"${env.BUILD_URL}",short:true],["title":"Branch","value":"$BRANCH",short:true]],
        footer:"Shopygram",
        footer_icon:""
      ]
    ]
    slackSend(channel: '#jenkins-test',attachments: attachments)
}
